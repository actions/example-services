name: MySQL Service Example

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

defaults:
  run:
    working-directory: ./mysql

jobs:
  container-job:
    runs-on: ubuntu-latest

    # runs all of the steps inside the specified container rather than on the VM host.
    # Because of this the network configuration changes from host based network to a container network.
    container:
      image:  node:10.16-jessie

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
        - 3306:3306
        # needed because the mysql container does not provide a healthcheck
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10

    steps:
    - uses: actions/checkout@v2
    - run: npm ci
    - run: node client.js
      env:
        # use mysql for the host here because we have specified a container for the job.
        # If we were running the job on the VM this would be localhost
        MYSQL_HOST: mysql
        MYSQL_PORT: ${{ job.services.mysql.ports[3306] }}

  # Runs all steps on the VM
  # The service containers will use host port binding instead of container networking so you access them via localhost rather than the service name
  vm-job:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
        # will assign a random free host port
        - 3306/tcp
        # needed because the mysql container does not provide a healthcheck
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10

    steps:
    - uses: actions/checkout@v2
    - run: npm ci
    - run: node client.js
      env:
        # use localhost for the host here because we are running the job on the VM.
        # If we were running the job on in a container this would be mysql
        MYSQL_HOST: localhost
        MYSQL_PORT: ${{ job.services.mysql.ports[3306] }} # get randomly assigned published port
